#include "main.h"
#include "engine.hpp"
#include "float2pwm.hpp"
#include "param_registry.hpp"

using namespace control;

/*
 ******************************************************************************
 * DEFINES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXTERNS
 ******************************************************************************
 */

/*
 ******************************************************************************
 * PROTOTYPES
 ******************************************************************************
 */

/*
 ******************************************************************************
 * GLOBAL VARIABLES
 ******************************************************************************
 */

/*
 ******************************************************************************
 ******************************************************************************
 * LOCAL FUNCTIONS
 ******************************************************************************
 ******************************************************************************
 */

/*
 ******************************************************************************
 * EXPORTED FUNCTIONS
 ******************************************************************************
 */

/**
 *
 */
Engine::Engine(PWM &pwm) :
pwm(pwm) {
  return;
}

/**
 *
 */
void Engine::start(void) {

  param_registry.valueSearch("SRV_thr_min", &thr_min);
  param_registry.valueSearch("SRV_thr_mid", &thr_mid);
  param_registry.valueSearch("SRV_thr_max", &thr_max);

  ready = true;
}

/**
 *
 */
void Engine::stop(void) {
  ready = false;
}

/**
 *
 */
void Engine::update(const DrivetrainImpact &impact) {
  int16_t tmp;

  osalDbgCheck(ready);

  tmp = float2pwm(impact.ch[IMPACT_THR], *thr_min, *thr_mid, *thr_max);
  pwm.update(tmp, PWM_CH_THR);
}

